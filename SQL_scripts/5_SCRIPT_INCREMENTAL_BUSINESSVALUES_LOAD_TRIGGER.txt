USE [CopenhagenMetro]
GO
/****** Object:  Trigger [dbo].[trigger_increment_load]    Script Date: 25/11/2020 08:22:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER TRIGGER [dbo].[trigger_increment_load_businessValues]
ON  [dbo].[source_EnvironmentValues]
AFTER INSERT
AS
BEGIN



/*5.0 CLEAN BEFORE INCREMENTAL LOAD*/
delete from CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue
delete from CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue
delete from CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue
delete from CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue
delete from CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog





/*11 INCREMENTAL LOAD, stage fact tables*/
/*CO2*/			
insert into CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue([MetroStation_ID],[Sensor_ID],[CO2_value],[dateAndTime])			
select m.[MetroStation_ID], s.[Sensor_ID], e.[CO2_value], e.[dateAndTime] from			
[CopenhagenMetro].[dbo].[source_EnvironmentValues] e			
join [CopenhagenMetro].[dbo].[source_Sensor] s on s.Sensor_ID = e.CO2_Sensor_ID			
join [CopenhagenMetro].[dbo].[source_MetroStation_Sensor] ms on ms.Sensor_ID= s.Sensor_ID			
join [CopenhagenMetro].[dbo].[source_MetroStation] m on m.MetroStation_ID=ms.MetroStation_ID			
where e.dateAndTime between ms.DateFrom and ms.DateTo AND e.dateAndTime>(select LastUpdate from CopenhagenMetro_DWH.dbo.dim_Update);			/*Update surrogate keys*/			
 update CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue			
  set M_ID=(Select M_ID from CopenhagenMetro_DWH.dbo.dim_MetroStation m where m.MetroStation_ID=stage_temp_f_CO2_EnvironmentValue.MetroStation_ID AND m.ValidTo='9999-12-31');	
  update CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue			
  set S_ID=(Select S_ID from CopenhagenMetro_DWH.dbo.dim_Sensor s where s.Sensor_ID=stage_temp_f_CO2_EnvironmentValue.Sensor_ID);			
 update CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue			
 set Date_ID=(Select Date_ID from CopenhagenMetro_DWH.dbo.dim_Date da where da.CalendarDate = 			
TRY_CONVERT(DATE, CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue.dateAndTime));			
 update CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue			
 set T_ID=(Select T_ID from CopenhagenMetro_DWH.dbo.dim_Time t where t.Hour= 			
 (Format(dateAndTime ,'%H')) AND t.Minute=(Format(dateAndTime, 'mm')));	

/*Passangers*/	
insert into CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue([MetroStation_ID],[Sensor_ID],[Passenger_value],[dateAndTime])	
select m.[MetroStation_ID], s.[Sensor_ID], e.[numberOfPassengers_value], e.[dateAndTime] from	
[CopenhagenMetro].[dbo].[source_EnvironmentValues] e	
join [CopenhagenMetro].[dbo].[source_Sensor] s on s.Sensor_ID = e.numberOfPassengers_Sensor_ID	
join [CopenhagenMetro].[dbo].[source_MetroStation_Sensor] ms on ms.Sensor_ID= s.Sensor_ID	
join [CopenhagenMetro].[dbo].[source_MetroStation] m on m.MetroStation_ID=ms.MetroStation_ID	
where e.dateAndTime between ms.DateFrom and ms.DateTo  AND e.dateAndTime>(select LastUpdate from CopenhagenMetro_DWH.dbo.dim_Update);	
/*Update surrogate keys*/	
 update CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue	
  set M_ID=(Select M_ID from CopenhagenMetro_DWH.dbo.dim_MetroStation m where m.MetroStation_ID=stage_temp_f_Passenger_EnvironmentValue.MetroStation_ID AND m.ValidTo='9999-12-31');	
  update CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue	
  set S_ID=(Select S_ID from CopenhagenMetro_DWH.dbo.dim_Sensor s where s.Sensor_ID=stage_temp_f_Passenger_EnvironmentValue.Sensor_ID);	
 update CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue	
 set Date_ID=(Select Date_ID from CopenhagenMetro_DWH.dbo.dim_Date da where da.CalendarDate = 	
TRY_CONVERT(DATE, CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue.dateAndTime));	
 update CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue	
 set T_ID=(Select T_ID from CopenhagenMetro_DWH.dbo.dim_Time t where t.Hour= 	
 (Format(dateAndTime ,'%H')) AND t.Minute=(Format(dateAndTime, 'mm')));	
		
/*Temperature*/
insert into CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue([MetroStation_ID],[Sensor_ID],[Temp_value],[dateAndTime])
select m.[MetroStation_ID], s.[Sensor_ID], e.[Temperature_value], e.[dateAndTime] from
[CopenhagenMetro].[dbo].[source_EnvironmentValues] e
join [CopenhagenMetro].[dbo].[source_Sensor] s on s.Sensor_ID = e.temperature_Sensor_ID
join [CopenhagenMetro].[dbo].[source_MetroStation_Sensor] ms on ms.Sensor_ID= s.Sensor_ID
join [CopenhagenMetro].[dbo].[source_MetroStation] m on m.MetroStation_ID=ms.MetroStation_ID
where e.dateAndTime between ms.DateFrom and ms.DateTo AND e.dateAndTime>(select LastUpdate from CopenhagenMetro_DWH.dbo.dim_Update);

/*Update surrogate keys*/
 update CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue
  set M_ID=(Select M_ID from CopenhagenMetro_DWH.dbo.dim_MetroStation m where m.MetroStation_ID=stage_temp_f_Temperature_EnvironmentValue.MetroStation_ID AND m.ValidTo='9999-12-31');
  update CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue
  set S_ID=(Select S_ID from CopenhagenMetro_DWH.dbo.dim_Sensor s where s.Sensor_ID=stage_temp_f_Temperature_EnvironmentValue.Sensor_ID);
   update CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue
 set Date_ID=(Select Date_ID from CopenhagenMetro_DWH.dbo.dim_Date da where da.CalendarDate = 
TRY_CONVERT(DATE, CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue.dateAndTime));
 update CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue
 set T_ID=(Select T_ID from CopenhagenMetro_DWH.dbo.dim_Time t where t.Hour= 
 (Format(dateAndTime ,'%H')) AND t.Minute=(Format(dateAndTime, 'mm')));


/*Humidity*/
insert into CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue([MetroStation_ID],[Sensor_ID],[Humidity_value],[dateAndTime])	
select m.[MetroStation_ID], s.[Sensor_ID], e.[Humidity_value], e.[dateAndTime] from	
[CopenhagenMetro].[dbo].[source_EnvironmentValues] e	
join [CopenhagenMetro].[dbo].[source_Sensor] s on s.Sensor_ID = e.Humidity_Sensor_ID	
join [CopenhagenMetro].[dbo].[source_MetroStation_Sensor] ms on ms.Sensor_ID= s.Sensor_ID	
join [CopenhagenMetro].[dbo].[source_MetroStation] m on m.MetroStation_ID=ms.MetroStation_ID	
where e.dateAndTime between ms.DateFrom and ms.DateTo AND e.dateAndTime>(select LastUpdate from CopenhagenMetro_DWH.dbo.dim_Update);	
	
/*Update surrogate keys*/	
 update CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue	
  set M_ID=(Select M_ID from CopenhagenMetro_DWH.dbo.dim_MetroStation m where m.MetroStation_ID=stage_temp_f_Humidity_EnvironmentValue.MetroStation_ID AND m.ValidTo='9999-12-31');	
  update CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue	
  set S_ID=(Select S_ID from CopenhagenMetro_DWH.dbo.dim_Sensor s where s.Sensor_ID=stage_temp_f_Humidity_EnvironmentValue.Sensor_ID);	
   update CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue	
 set Date_ID=(Select Date_ID from CopenhagenMetro_DWH.dbo.dim_Date da where da.CalendarDate = 	
TRY_CONVERT(DATE, CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue.dateAndTime));	
 update CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue	
 set T_ID=(Select T_ID from CopenhagenMetro_DWH.dbo.dim_Time t where t.Hour= 	
 (Format(dateAndTime ,'%H')) AND t.Minute=(Format(dateAndTime, 'mm')));	




/*11 INCREMENTAL LOAD for stage fact actions*/
insert into CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog([Device_ID],[Action_ID],[valueSetInDevice],[dateAndTime])
select d.[Device_ID], a.[Action_ID], al.[valueSetInDevice], al.[dateAndTime] from
[CopenhagenMetro].[dbo].[source_Action_Device] al
join [CopenhagenMetro].[dbo].[source_Device] d on d.Device_ID = al.Device_ID
join [CopenhagenMetro].[dbo].[source_Action] a on a.Action_ID= al.Action_ID AND al.dateAndTime>(select LastUpdate from CopenhagenMetro_DWH.dbo.dim_Update);			


/*Update surrogate keys*/
 update CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog
  set A_ID=(Select A_ID from CopenhagenMetro_DWH.dbo.dim_Action a where a.Action_ID=stage_temp_f_ActionLog.Action_ID);
  update CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog
  set D_ID=(Select D_ID from CopenhagenMetro_DWH.dbo.dim_Device d where d.Device_ID=stage_temp_f_ActionLog.Device_ID);
 update CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog
 set Date_ID=(Select Date_ID from CopenhagenMetro_DWH.dbo.dim_Date da where da.CalendarDate = 
TRY_CONVERT(DATE, CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog.dateAndTime));
 update CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog
 set T_ID=(Select T_ID from CopenhagenMetro_DWH.dbo.dim_Time t where t.Hour= 
 (Format(dateAndTime ,'%H')) AND t.Minute=(Format(dateAndTime, 'mm')));





/*12 INCREMENT LOAD for fact tables from stage fact tables*/
/*CO2*/
insert into CopenhagenMetro_DWH.dbo.f_CO2_EnvironmentValue (M_ID, Date_ID,T_ID,S_ID, CO2_value)
select M_ID, Date_ID,T_ID,S_ID, CO2_value
from CopenhagenMetro_stage.dbo.stage_temp_f_CO2_EnvironmentValue;


/*Temperature*/
insert into CopenhagenMetro_DWH.dbo.f_Temperature_EnvironmentValue (M_ID, Date_ID,T_ID,S_ID,Temp_Value)
select M_ID, Date_ID,T_ID,S_ID, Temp_value
from CopenhagenMetro_stage.dbo.stage_temp_f_Temperature_EnvironmentValue;

/*Humidity*/
insert into CopenhagenMetro_DWH.dbo.f_Humidity_EnvironmentValue (M_ID, Date_ID,T_ID,S_ID,Humidity_Value)
select M_ID, Date_ID,T_ID,S_ID, Humidity_value
from CopenhagenMetro_stage.dbo.stage_temp_f_Humidity_EnvironmentValue;


/*Passangers*/
insert into CopenhagenMetro_DWH.dbo.f_Passenger_EnvironmentValue (M_ID, Date_ID,T_ID,S_ID, Passenger_value)		
select M_ID, Date_ID,T_ID,S_ID, Passenger_value		
from CopenhagenMetro_stage.dbo.stage_temp_f_Passenger_EnvironmentValue;		

/*Actions*/
insert into  CopenhagenMetro_DWH.dbo.f_ActionLog (A_ID, D_ID,T_ID,Date_ID, valueSetInDevice)	
select A_ID, D_ID,T_ID,Date_ID, valueSetInDevice	
from CopenhagenMetro_stage.dbo.stage_temp_f_ActionLog;


/*13 INCREMENTAL LOAD, set last incremental load date*/
/*after incremental load*/
update CopenhagenMetro_DWH.dbo.dim_Update set LastUpdate=(SELECT DATEADD (hour, +1 ,GETDATE()))





END
